import { InjectionToken } from '@angular/core';
import { Observable } from 'rxjs';
export declare type FullscreenRequestEvents = 'requestFullscreen' | 'webkitRequestFullscreen' | 'webkitRequestFullScreen' | 'mozRequestFullScreen' | 'msRequestFullscreen';
export declare type FullscreenExitEvents = 'exitFullscreen' | 'webkitExitFullscreen' | 'webkitCancelFullScreen' | 'mozCancelFullScreen' | 'msExitFullscreen';
export declare type FullscreenChangeEvents = 'fullscreenchange' | 'webkitfullscreenchange' | 'mozfullscreenchange' | 'MSFullscreenChange';
export declare type FullscreenErrorEvents = 'fullscreenerror' | 'webkitfullscreenerror' | 'webkitfullscreenerror' | 'mozfullscreenerror' | 'MSFullscreenError';
export declare type FullscreenElementKeys = 'fullscreenElement' | 'webkitFullscreenElement' | 'webkitCurrentFullScreenElement' | 'mozFullScreenElement' | 'msFullscreenElement';
export declare type FullscreenEnabledKeys = 'fullscreenEnabled' | 'mozFullscreenEnabled' | 'webkitFullscreenEnabled' | 'msFullscreenEnabled';
export declare type FullscreenEnabledFunc = (elm: HTMLElement) => Observable<boolean>;
export declare const FS_FULLSCREEN_REQUEST_EVENTS: InjectionToken<ReadonlyArray<FullscreenRequestEvents>>;
export declare const FS_FULLSCREEN_EXIT_EVENTS: InjectionToken<ReadonlyArray<FullscreenExitEvents>>;
export declare const FS_FULLSCREEN_CHANGE_EVENTS: InjectionToken<ReadonlyArray<FullscreenChangeEvents>>;
export declare const FS_FULLSCREEN_ELEMENT_ERROR_EVENTS: InjectionToken<ReadonlyArray<FullscreenErrorEvents>>;
export declare const FS_FULLSCREEN_ELEMENT: InjectionToken<ReadonlyArray<FullscreenElementKeys>>;
export declare const FS_FULLSCREEN_ENABLED: InjectionToken<ReadonlyArray<FullscreenEnabledKeys>>;
export declare const FS_FULLSCREEN_ENABLED_FUNC: InjectionToken<FullscreenEnabledFunc>;
export declare const FS_FULLSCREEN_IOS_POLL_ENABLED: InjectionToken<boolean>;
export declare const FS_FULLSCREEN_IOS_POLL_MS: InjectionToken<number>;
