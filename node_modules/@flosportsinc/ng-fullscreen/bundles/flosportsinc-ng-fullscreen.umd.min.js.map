{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@flosportsinc/ng-fullscreen/src/common/util.ts","ng://@flosportsinc/ng-fullscreen/src/common/ng-fullscreen.tokens.ts","ng://@flosportsinc/ng-fullscreen/src/common/ng-fullscreen.service.ts","ng://@flosportsinc/ng-fullscreen/src/common/ng-fullscreen.tokens.defaults.ts","ng://@flosportsinc/ng-fullscreen/src/common/ng-fullscreen.module.ts","ng://@flosportsinc/ng-fullscreen/src/toggle/ng-fullscreen.toggle.directive.ts","ng://@flosportsinc/ng-fullscreen/src/toggle/ng-fullscreen.toggle.module.ts","ng://@flosportsinc/ng-fullscreen/src/switch/ng-fullscreen.switch.directive.ts","ng://@flosportsinc/ng-fullscreen/src/switch/ng-fullscreen.switch.module.ts","ng://@flosportsinc/ng-fullscreen/src/ng-fullscreen.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","isIphone","window","navigator","userAgent","match","FS_FULLSCREEN_REQUEST_EVENTS","InjectionToken","FS_FULLSCREEN_EXIT_EVENTS","FS_FULLSCREEN_CHANGE_EVENTS","FS_FULLSCREEN_ELEMENT_ERROR_EVENTS","FS_FULLSCREEN_ELEMENT","FS_FULLSCREEN_ENABLED","FS_FULLSCREEN_ENABLED_FUNC","FS_FULLSCREEN_IOS_POLL_ENABLED","FS_FULLSCREEN_IOS_POLL_MS","isKeyTrue","platformKeys","doc","reduce","acc","curr","fullscreenChangeError","merge","apply","map","key","fromEvent","pipe","debounceTime","filterAndExecute","ref","arr","funcStringIdx","findIndex","a","FloFullscreenService","zone","platformId","requestEventKeys","exitEventKeys","elementKeys","changeEventKeys","elementErrorEventKeys","enabledKeys","enabledFunc","iosPollrate","iosPollEnabled","_this","iOSVideoState","BehaviorSubject","isFullscreen","isPlatformServer","getValue","fullscreenError$","throwError","iosVideoBypass","pasthrough","extractVideoForIphoneIfRequired","element","HTMLVideoElement","querySelector","iosPoller","runOutsideAngular","interval","from","querySelectorAll","flatMap","videoElements","ve","tap","take","takeUntil","EMPTY","fullscreen$","of","distinctUntilChanged","startWith","shareReplay","fullscreenIsSupported","elm","canGoFullscreen","isSupported","isfs","isFullscreen$","filter","v","isNotFullscreen","exitFullscreen","goFullscreen","body","Injectable","args","providedIn","NgZone","Inject","DOCUMENT","PLATFORM_ID","DEFAULT_FS_FULLSCREEN_REQUEST_EVENTS","DEFAULT_FS_FULLSCREEN_EXIT_EVENTS","DEFAULT_FS_FULLSCREEN_ELEMENT_ERROR_EVENTS","DEFAULT_FS_FULLSCREEN_ELEMENT","DEFAULT_FS_FULLSCREEN_ENABLED","DEFAULT_FS_FULLSCREEN_CHANGE_EVENTS","DEFAULT_FS_FULLSCREEN_ENABLED_FUNC","_elm","readyState","evt","target","webkitSupportsFullscreen","ɵ0","ɵ1","ɵ2","ɵ3","ɵ4","ɵ5","ɵ6","FloFullscreenCommonModule","config","ngModule","providers","provide","useValue","ios","enabled","pollDurationMs","NgModule","imports","CommonModule","exports","useFactory","FloClickToEnterFullscreenDirective","fs","cd","defineProperty","_element","val","HTMLElement","click","detectChanges","subscribe","_","floClickToEnterFullscreen","Directive","selector","ChangeDetectorRef","Input","HostListener","FloClickToExitFullscreenDirective","FloFullscreenToggleModule","declarations","FloFullscreenDirective","tr","vc","elmSource","Subject","showWhenFullscreen","ngOnDestroy$","elmInputKey","undefined","elm$","asObservable","ngOnInit","combineLatest","delay","res","clear","createEmbeddedView","ngOnChanges","sc","currentValue","ngOnDestroy","complete","TemplateRef","ViewContainerRef","IF_FS_SELECTOR","FloFullscreenOnDirective","_super","tslib_1.__extends","inputs","IF_NOT_FS_SELECTOR","FloFullscreenOffDirective","FloFullscreenSwitchModule","FloFullscreenModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export const isIphone = () => typeof window === 'undefined' || typeof window.navigator === 'undefined'\n  ? false\n  : window.navigator.userAgent.match(/iPhone/)\n    ? true :\n    false\n","import { InjectionToken } from '@angular/core'\nimport { Observable } from 'rxjs'\n\n// tslint:disable: max-line-length\nexport type FullscreenRequestEvents = 'requestFullscreen' | 'webkitRequestFullscreen' | 'webkitRequestFullScreen' | 'mozRequestFullScreen' | 'msRequestFullscreen'\nexport type FullscreenExitEvents = 'exitFullscreen' | 'webkitExitFullscreen' | 'webkitCancelFullScreen' | 'mozCancelFullScreen' | 'msExitFullscreen'\nexport type FullscreenChangeEvents = 'fullscreenchange' | 'webkitfullscreenchange' | 'mozfullscreenchange' | 'MSFullscreenChange'\nexport type FullscreenErrorEvents = 'fullscreenerror' | 'webkitfullscreenerror' | 'webkitfullscreenerror' | 'mozfullscreenerror' | 'MSFullscreenError'\nexport type FullscreenElementKeys = 'fullscreenElement' | 'webkitFullscreenElement' | 'webkitCurrentFullScreenElement' | 'mozFullScreenElement' | 'msFullscreenElement'\nexport type FullscreenEnabledKeys = 'fullscreenEnabled' | 'mozFullscreenEnabled' | 'webkitFullscreenEnabled' | 'msFullscreenEnabled'\n\nexport type FullscreenEnabledFunc = (elm: HTMLElement) => Observable<boolean>\n\nexport const FS_FULLSCREEN_REQUEST_EVENTS = new InjectionToken<ReadonlyArray<FullscreenRequestEvents>>('fs.fullscreen.request')\nexport const FS_FULLSCREEN_EXIT_EVENTS = new InjectionToken<ReadonlyArray<FullscreenExitEvents>>('fs.fullscreen.exit')\nexport const FS_FULLSCREEN_CHANGE_EVENTS = new InjectionToken<ReadonlyArray<FullscreenChangeEvents>>('fs.fullscreen.change')\nexport const FS_FULLSCREEN_ELEMENT_ERROR_EVENTS = new InjectionToken<ReadonlyArray<FullscreenErrorEvents>>('fs.fullscreen.error')\nexport const FS_FULLSCREEN_ELEMENT = new InjectionToken<ReadonlyArray<FullscreenElementKeys>>('fs.fullscreen.element')\nexport const FS_FULLSCREEN_ENABLED = new InjectionToken<ReadonlyArray<FullscreenEnabledKeys>>('fs.fullscreen.enabled')\nexport const FS_FULLSCREEN_ENABLED_FUNC = new InjectionToken<FullscreenEnabledFunc>('fs.fullscreen.enabled-func')\nexport const FS_FULLSCREEN_IOS_POLL_ENABLED = new InjectionToken<boolean>('fs.fullscreen.ios.poll.enabled')\nexport const FS_FULLSCREEN_IOS_POLL_MS = new InjectionToken<number>('fs.fullscreen.ios.poll.ms')\n","\nimport { isIphone } from './util'\nimport { DOCUMENT, isPlatformServer } from '@angular/common'\nimport { Injectable, Inject, PLATFORM_ID, NgZone } from '@angular/core'\nimport { merge, fromEvent, Observable, throwError, of, interval, BehaviorSubject, EMPTY } from 'rxjs'\nimport {\n  debounceTime, map, startWith, shareReplay, filter, flatMap, tap,\n  distinctUntilChanged, take, takeUntil\n} from 'rxjs/operators'\nimport {\n  FS_FULLSCREEN_REQUEST_EVENTS, FS_FULLSCREEN_EXIT_EVENTS, FS_FULLSCREEN_ELEMENT,\n  FS_FULLSCREEN_CHANGE_EVENTS, FS_FULLSCREEN_ELEMENT_ERROR_EVENTS, FullscreenRequestEvents,\n  FullscreenExitEvents, FullscreenElementKeys, FullscreenChangeEvents, FullscreenErrorEvents,\n  FS_FULLSCREEN_ENABLED, FullscreenEnabledKeys, FS_FULLSCREEN_ENABLED_FUNC, FullscreenEnabledFunc,\n  FS_FULLSCREEN_IOS_POLL_MS, FS_FULLSCREEN_IOS_POLL_ENABLED\n} from './ng-fullscreen.tokens'\n\nconst isKeyTrue =\n  (platformKeys: ReadonlyArray<string>) =>\n    (doc: HTMLDocument | HTMLElement) =>\n      platformKeys.reduce((acc, curr) => acc || doc[curr] ? true : false, false)\n\nconst fullscreenChangeError =\n  (platformKeys: ReadonlyArray<string>) =>\n    (doc: HTMLDocument) =>\n      merge(...platformKeys.map(key => fromEvent(doc, key))).pipe(debounceTime(0))\n\nconst filterAndExecute =\n  (ref: HTMLElement | HTMLDocument) =>\n    (arr: ReadonlyArray<string>) => {\n      const funcStringIdx = arr.findIndex(a => typeof ref[a] === 'function')\n      if (funcStringIdx >= 0) {\n        ref[arr[funcStringIdx]]()\n      }\n    }\n\nexport interface IFloFullscreenService {\n  readonly fullscreen$: Observable<boolean>\n  readonly isFullscreen$: Observable<boolean>\n  readonly isNotFullscreen: Observable<boolean>\n  readonly exitFullscreen: () => void\n  readonly goFullscreen: (elm?: HTMLElement | HTMLDocument) => void\n  readonly canGoFullscreen: (elm?: HTMLElement) => Observable<boolean>\n  readonly fullscreenIsSupported: (elm?: HTMLElement) => Observable<boolean>\n  readonly isFullscreen: (elmOrDoc: HTMLDocument | HTMLElement) => boolean\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FloFullscreenService implements IFloFullscreenService {\n  // tslint:disable: readonly-array\n  constructor(\n    private zone: NgZone,\n    @Inject(DOCUMENT) private doc: any,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Inject(FS_FULLSCREEN_REQUEST_EVENTS) private requestEventKeys: FullscreenRequestEvents[],\n    @Inject(FS_FULLSCREEN_EXIT_EVENTS) private exitEventKeys: FullscreenExitEvents[],\n    @Inject(FS_FULLSCREEN_ELEMENT) private elementKeys: FullscreenElementKeys[],\n    @Inject(FS_FULLSCREEN_CHANGE_EVENTS) private changeEventKeys: FullscreenChangeEvents[],\n    @Inject(FS_FULLSCREEN_ELEMENT_ERROR_EVENTS) private elementErrorEventKeys: FullscreenErrorEvents[],\n    @Inject(FS_FULLSCREEN_ENABLED) private enabledKeys: FullscreenEnabledKeys[],\n    @Inject(FS_FULLSCREEN_ENABLED_FUNC) private enabledFunc: FullscreenEnabledFunc,\n    @Inject(FS_FULLSCREEN_IOS_POLL_MS) private iosPollrate: number,\n    @Inject(FS_FULLSCREEN_IOS_POLL_ENABLED) private iosPollEnabled: boolean\n  ) { }\n\n  private readonly iOSVideoState = new BehaviorSubject<boolean>(false)\n\n  public readonly isFullscreen = (doc: HTMLDocument | HTMLElement = this.doc) =>\n    isPlatformServer(this.platformId) ? false : isKeyTrue(this.elementKeys)(doc) || this.iOSVideoState.getValue()\n\n  public readonly fullscreenError$ = fullscreenChangeError(this.elementErrorEventKeys)(this.doc).pipe(map(e => throwError(e)))\n\n  private readonly iosVideoBypass = (pasthrough: string[]) => isIphone() ? ['webkitEnterFullscreen'] : pasthrough\n  public readonly extractVideoForIphoneIfRequired = (element: HTMLElement) => isIphone() && !(element instanceof HTMLVideoElement)\n    ? element.querySelector('video') || element\n    : element\n\n  private readonly iosPoller = () => !this.iosPollEnabled\n    ? EMPTY\n    : this.zone.runOutsideAngular(() =>\n      interval(this.iosPollrate).pipe(\n        map(() => Array.from((this.doc as HTMLDocument).querySelectorAll('video'))),\n        flatMap(videoElements => merge(\n          ...videoElements.map(ve => fromEvent(ve, 'webkitbeginfullscreen').pipe(tap(() => this.iOSVideoState.next(true)), take(1))),\n          ...videoElements.map(ve => fromEvent(ve, 'webkitendfullscreen').pipe(tap(() => this.iOSVideoState.next(false)), take(1)))\n        )), takeUntil(this.iOSVideoState)))\n\n  public readonly fullscreen$ = isPlatformServer(this.platformId)\n    ? of(false)\n    : merge(\n      ...this.changeEventKeys.map(key => fromEvent(this.doc, key)),\n      this.fullscreenError$,\n      this.iosPoller()).pipe(\n        debounceTime(0),\n        map(() => this.isFullscreen()),\n        distinctUntilChanged(),\n        startWith(this.isFullscreen()),\n        shareReplay(1))\n\n  public readonly fullscreenIsSupported =\n    (elm?: HTMLElement) =>\n      (isPlatformServer(this.platformId)\n        ? of(false)\n        : isKeyTrue(this.enabledKeys)(this.doc)\n          ? of(true)\n          : !elm\n            ? of(false)\n            : this.enabledFunc(elm)).pipe(shareReplay(1))\n\n  public readonly canGoFullscreen =\n    (elm?: HTMLElement) =>\n      (isPlatformServer(this.platformId)\n        ? of(false)\n        : this.fullscreenIsSupported(elm)\n          .pipe(flatMap(isSupported => !isSupported\n            ? of(false)\n            : this.fullscreen$.pipe(map(isfs => isfs ? false : true))))).pipe(shareReplay(1))\n\n  public readonly isFullscreen$ = this.fullscreen$.pipe(filter(v => v === true))\n  public readonly isNotFullscreen = this.fullscreen$.pipe(filter(v => v === false))\n  public readonly exitFullscreen = () => filterAndExecute(this.doc)(this.exitEventKeys)\n  public readonly goFullscreen = (elm: HTMLElement | HTMLDocument = this.doc.body) =>\n    filterAndExecute(elm)(this.iosVideoBypass(this.requestEventKeys))\n}\n","import {\n  FullscreenRequestEvents, FullscreenExitEvents, FullscreenChangeEvents,\n  FullscreenErrorEvents, FullscreenEnabledKeys, FullscreenElementKeys, FullscreenEnabledFunc\n} from './ng-fullscreen.tokens'\nimport { fromEvent, of } from 'rxjs'\nimport { map, take } from 'rxjs/operators'\n\nexport const DEFAULT_FS_FULLSCREEN_REQUEST_EVENTS: ReadonlyArray<FullscreenRequestEvents> = [\n  'requestFullscreen',\n  'webkitRequestFullscreen',\n  'webkitRequestFullScreen',\n  'mozRequestFullScreen',\n  'msRequestFullscreen'\n]\n\nexport const DEFAULT_FS_FULLSCREEN_EXIT_EVENTS: ReadonlyArray<FullscreenExitEvents> = [\n  'exitFullscreen',\n  'webkitExitFullscreen',\n  'webkitCancelFullScreen',\n  'mozCancelFullScreen',\n  'msExitFullscreen'\n]\n\nexport const DEFAULT_FS_FULLSCREEN_ELEMENT_ERROR_EVENTS: ReadonlyArray<FullscreenErrorEvents> = [\n  'fullscreenerror',\n  'webkitfullscreenerror',\n  'webkitfullscreenerror',\n  'mozfullscreenerror',\n  'MSFullscreenError'\n]\n\nexport const DEFAULT_FS_FULLSCREEN_ELEMENT: ReadonlyArray<FullscreenElementKeys> = [\n  'fullscreenElement',\n  'webkitFullscreenElement',\n  'webkitCurrentFullScreenElement',\n  'mozFullScreenElement',\n  'msFullscreenElement'\n]\n\nexport const DEFAULT_FS_FULLSCREEN_ENABLED: ReadonlyArray<FullscreenEnabledKeys> = [\n  'fullscreenEnabled',\n  'mozFullscreenEnabled',\n  'webkitFullscreenEnabled',\n  'msFullscreenEnabled'\n]\n\nexport const DEFAULT_FS_FULLSCREEN_CHANGE_EVENTS: ReadonlyArray<FullscreenChangeEvents> = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'mozfullscreenchange',\n  'MSFullscreenChange'\n]\n\nexport function DEFAULT_FS_FULLSCREEN_ENABLED_FUNC(): FullscreenEnabledFunc {\n  const lambda = (elm: HTMLElement) => {\n    const _elm = elm instanceof HTMLVideoElement ? elm : elm.querySelector('video')\n    return !_elm ? of(false) : (_elm as any).readyState >= 2\n        ? of(true)\n        : fromEvent(_elm, 'loadedmetadata').pipe(\n          map(evt => !evt.target ? false : (evt.target as any).webkitSupportsFullscreen),\n          take(1))\n  }\n  return lambda\n}\n\nexport const DEFAULT_FS_FULLSCREEN_IOS_POLL_ENABLED = true\nexport const DEFAULT_FS_FULLSCREEN_IOS_POLL_MS = 60\n","import { NgModule, ModuleWithProviders, ChangeDetectorRef } from '@angular/core'\nimport { FloFullscreenService } from './ng-fullscreen.service'\nimport { CommonModule } from '@angular/common'\nimport {\n  FS_FULLSCREEN_REQUEST_EVENTS, FS_FULLSCREEN_EXIT_EVENTS, FS_FULLSCREEN_CHANGE_EVENTS,\n  FS_FULLSCREEN_ELEMENT_ERROR_EVENTS, FS_FULLSCREEN_ELEMENT, FS_FULLSCREEN_ENABLED,\n  FS_FULLSCREEN_ENABLED_FUNC, FS_FULLSCREEN_IOS_POLL_MS, FS_FULLSCREEN_IOS_POLL_ENABLED\n} from './ng-fullscreen.tokens'\nimport {\n  DEFAULT_FS_FULLSCREEN_REQUEST_EVENTS, DEFAULT_FS_FULLSCREEN_EXIT_EVENTS, DEFAULT_FS_FULLSCREEN_CHANGE_EVENTS,\n  DEFAULT_FS_FULLSCREEN_ELEMENT_ERROR_EVENTS, DEFAULT_FS_FULLSCREEN_ELEMENT, DEFAULT_FS_FULLSCREEN_ENABLED,\n  DEFAULT_FS_FULLSCREEN_ENABLED_FUNC,\n  DEFAULT_FS_FULLSCREEN_IOS_POLL_MS,\n  DEFAULT_FS_FULLSCREEN_IOS_POLL_ENABLED\n} from './ng-fullscreen.tokens.defaults'\n\nexport interface FloFullscreenCommonModuleConfig {\n  readonly ios: Partial<FloFullscreenCommonModuleIosPollingConfig>\n}\n\nexport interface FloFullscreenCommonModuleIosPollingConfig {\n  readonly enabled: boolean\n  readonly pollDurationMs: number\n}\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CommonModule],\n  providers: [\n    FloFullscreenService,\n    { provide: FS_FULLSCREEN_REQUEST_EVENTS, useValue: DEFAULT_FS_FULLSCREEN_REQUEST_EVENTS },\n    { provide: FS_FULLSCREEN_EXIT_EVENTS, useValue: DEFAULT_FS_FULLSCREEN_EXIT_EVENTS },\n    { provide: FS_FULLSCREEN_CHANGE_EVENTS, useValue: DEFAULT_FS_FULLSCREEN_CHANGE_EVENTS },\n    { provide: FS_FULLSCREEN_ELEMENT_ERROR_EVENTS, useValue: DEFAULT_FS_FULLSCREEN_ELEMENT_ERROR_EVENTS },\n    { provide: FS_FULLSCREEN_ELEMENT, useValue: DEFAULT_FS_FULLSCREEN_ELEMENT },\n    { provide: FS_FULLSCREEN_ENABLED, useValue: DEFAULT_FS_FULLSCREEN_ENABLED },\n    { provide: FS_FULLSCREEN_ENABLED_FUNC, useFactory: DEFAULT_FS_FULLSCREEN_ENABLED_FUNC },\n    { provide: FS_FULLSCREEN_IOS_POLL_MS, useValue: DEFAULT_FS_FULLSCREEN_IOS_POLL_MS },\n    { provide: FS_FULLSCREEN_IOS_POLL_ENABLED, useValue: DEFAULT_FS_FULLSCREEN_IOS_POLL_ENABLED }\n  ]\n})\nexport class FloFullscreenCommonModule {\n  static config(config: Partial<FloFullscreenCommonModuleConfig>): ModuleWithProviders {\n    return {\n      ngModule: FloFullscreenCommonModule,\n      providers: [\n        {\n          provide: FS_FULLSCREEN_IOS_POLL_ENABLED,\n          useValue: config.ios && typeof config.ios.enabled === 'boolean' ? config.ios.enabled : DEFAULT_FS_FULLSCREEN_IOS_POLL_ENABLED\n        },\n        {\n          provide: FS_FULLSCREEN_IOS_POLL_MS,\n          useValue: config.ios && typeof config.ios.pollDurationMs === 'number'\n            ? config.ios.pollDurationMs\n            : DEFAULT_FS_FULLSCREEN_IOS_POLL_MS\n        }\n      ]\n    }\n  }\n}\n","import { Directive, HostListener, Input, Inject, ChangeDetectorRef } from '@angular/core'\nimport { FloFullscreenService } from '../common/ng-fullscreen.service'\nimport { take } from 'rxjs/operators'\nimport { DOCUMENT } from '@angular/common'\n\n// tslint:disable: readonly-keyword\n// tslint:disable: no-object-mutation\n\n@Directive({\n  selector: '[floClickToEnterFullscreen]',\n})\nexport class FloClickToEnterFullscreenDirective {\n  constructor(private fs: FloFullscreenService, @Inject(DOCUMENT) private doc: any, private cd: ChangeDetectorRef) { }\n\n  private _element: HTMLElement | HTMLDocument\n\n  @Input()\n  get floClickToEnterFullscreen() {\n    return this._element\n  }\n  set floClickToEnterFullscreen(val: any) {\n    if (val instanceof HTMLElement) {\n      this._element = val\n    } else {\n      this._element = this.doc.body\n    }\n  }\n\n  @HostListener('click', []) click() {\n    this.cd.detectChanges()\n    this.fs.isNotFullscreen.pipe(take(1)).subscribe(_ => {\n      // should check for nested video elements to make iOS dev easier\n      this.fs.goFullscreen(this.fs.extractVideoForIphoneIfRequired(this.floClickToEnterFullscreen))\n    })\n  }\n}\n\n@Directive({\n  selector: '[floClickToExitFullscreen]',\n})\nexport class FloClickToExitFullscreenDirective {\n  constructor(private fs: FloFullscreenService) { }\n\n  @HostListener('click', []) click() {\n    this.fs.exitFullscreen()\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { FloFullscreenCommonModule } from '../common/ng-fullscreen.module'\nimport { FloClickToExitFullscreenDirective, FloClickToEnterFullscreenDirective } from './ng-fullscreen.toggle.directive'\n\n@NgModule({\n  imports: [FloFullscreenCommonModule],\n  declarations: [\n    FloClickToEnterFullscreenDirective,\n    FloClickToExitFullscreenDirective\n  ],\n  exports: [\n    FloClickToEnterFullscreenDirective,\n    FloClickToExitFullscreenDirective\n  ]\n})\nexport class FloFullscreenToggleModule { }\n","import {\n  Directive, TemplateRef, ViewContainerRef, OnInit, OnDestroy,\n  SimpleChanges, OnChanges, ChangeDetectorRef, Inject, NgZone\n} from '@angular/core'\nimport { takeUntil, flatMap, startWith, delay, tap, distinctUntilChanged } from 'rxjs/operators'\nimport { Subject, combineLatest, interval } from 'rxjs'\nimport { FloFullscreenService } from '../common/ng-fullscreen.service'\nimport { isIphone } from '../common/util'\nimport { FS_FULLSCREEN_IOS_POLL_MS, FS_FULLSCREEN_IOS_POLL_ENABLED } from '../common/ng-fullscreen.tokens'\n\n// tslint:disable: readonly-keyword\nexport abstract class FloFullscreenDirective implements OnDestroy, OnInit, OnChanges {\n  constructor(protected tr: TemplateRef<any>, protected vc: ViewContainerRef, protected fs: FloFullscreenService,\n    protected cd: ChangeDetectorRef, @Inject(FS_FULLSCREEN_IOS_POLL_ENABLED) protected iosPollEnabled: boolean,\n    @Inject(FS_FULLSCREEN_IOS_POLL_MS) protected iosPollrate: number,\n    protected zone: NgZone) { }\n\n  protected abstract elmInputKey?: string\n  private readonly elmSource = new Subject<HTMLElement | undefined>()\n\n  protected showWhenFullscreen = false\n  protected readonly ngOnDestroy$ = new Subject()\n  protected readonly elm = () => this.elmInputKey ? this[this.elmInputKey] as HTMLElement : undefined\n  protected readonly elm$ = this.elmSource.asObservable()\n\n  ngOnInit() {\n    combineLatest(\n      this.fs.fullscreen$,\n      this.elm$.pipe(\n        tap(() => this.cd.detectChanges()),\n        startWith(this.elm()),\n        delay(0),\n        flatMap(elm => this.iosPollEnabled && isIphone()\n          ? this.zone.runOutsideAngular(() =>\n            interval(this.iosPollrate).pipe(\n              flatMap(() => this.fs.fullscreenIsSupported(elm)),\n              distinctUntilChanged(),\n              takeUntil(this.ngOnDestroy$)))\n          : this.fs.fullscreenIsSupported(elm)\n        ),\n        takeUntil(this.ngOnDestroy$)\n      )\n    ).pipe(takeUntil(this.ngOnDestroy$)).subscribe(res => {\n      const isFullscreen = res[0]\n      const isSupported = res[1]\n      this.vc.clear()\n      if (this.showWhenFullscreen) { // exit\n        if (isFullscreen) {\n          this.vc.createEmbeddedView(this.tr)\n        }\n      } else if (!isFullscreen) { // enter\n        if (isSupported) {\n          this.vc.createEmbeddedView(this.tr)\n        }\n      }\n      this.cd.detectChanges()\n    })\n  }\n\n  ngOnChanges(sc: SimpleChanges) {\n    if (this.elmInputKey && sc[this.elmInputKey]) {\n      this.elmSource.next(sc[this.elmInputKey].currentValue)\n    }\n  }\n\n  ngOnDestroy() {\n    this.ngOnDestroy$.next()\n    this.ngOnDestroy$.complete()\n  }\n}\n\nconst IF_FS_SELECTOR = 'floIfFullscreen'\n\n@Directive({\n  selector: `[${IF_FS_SELECTOR}]`,\n  inputs: [IF_FS_SELECTOR]\n})\nexport class FloFullscreenOnDirective extends FloFullscreenDirective {\n  constructor(protected tr: TemplateRef<any>, protected vc: ViewContainerRef, protected fs: FloFullscreenService,\n    protected cd: ChangeDetectorRef, @Inject(FS_FULLSCREEN_IOS_POLL_ENABLED) protected iosPollEnabled: boolean,\n    @Inject(FS_FULLSCREEN_IOS_POLL_MS) protected iosPollrate: number, protected zone: NgZone) {\n    super(tr, vc, fs, cd, iosPollEnabled, iosPollrate, zone)\n    this.showWhenFullscreen = true\n  }\n\n  elmInputKey = IF_FS_SELECTOR\n}\n\nconst IF_NOT_FS_SELECTOR = 'floIfNotFullscreen'\n\n@Directive({\n  selector: `[${IF_NOT_FS_SELECTOR}]`,\n  inputs: [IF_NOT_FS_SELECTOR]\n})\nexport class FloFullscreenOffDirective extends FloFullscreenDirective {\n  constructor(protected tr: TemplateRef<any>, protected vc: ViewContainerRef, protected fs: FloFullscreenService,\n    protected cd: ChangeDetectorRef, @Inject(FS_FULLSCREEN_IOS_POLL_ENABLED) protected iosPollEnabled: boolean,\n    @Inject(FS_FULLSCREEN_IOS_POLL_MS) protected iosPollrate: number, protected zone: NgZone) {\n    super(tr, vc, fs, cd, iosPollEnabled, iosPollrate, zone)\n    this.showWhenFullscreen = false\n  }\n\n  elmInputKey = IF_NOT_FS_SELECTOR\n}\n","import { NgModule } from '@angular/core'\nimport { FloFullscreenCommonModule } from '../common/ng-fullscreen.module'\nimport { FloFullscreenOnDirective, FloFullscreenOffDirective } from './ng-fullscreen.switch.directive'\n\n@NgModule({\n  imports: [FloFullscreenCommonModule],\n  declarations: [\n    FloFullscreenOnDirective,\n    FloFullscreenOffDirective\n  ],\n  exports: [\n    FloFullscreenOnDirective,\n    FloFullscreenOffDirective\n  ]\n})\nexport class FloFullscreenSwitchModule { }\n","import { NgModule } from '@angular/core'\nimport { FloFullscreenCommonModule } from './common/ng-fullscreen.module'\nimport { FloFullscreenToggleModule } from './toggle/ng-fullscreen.toggle.module'\nimport { FloFullscreenSwitchModule } from './switch/ng-fullscreen.switch.module'\n\n@NgModule({\n  imports: [\n    FloFullscreenCommonModule,\n    FloFullscreenSwitchModule,\n    FloFullscreenToggleModule\n  ],\n  exports: [\n    FloFullscreenCommonModule,\n    FloFullscreenSwitchModule,\n    FloFullscreenToggleModule\n  ]\n})\nexport class FloFullscreenModule { }\n"]}