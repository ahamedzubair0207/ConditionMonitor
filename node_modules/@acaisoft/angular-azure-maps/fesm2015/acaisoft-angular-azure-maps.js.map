{"version":3,"file":"acaisoft-angular-azure-maps.js.map","sources":["ng://@acaisoft/angular-azure-maps/src/azure-map/directives/atlas-popup.directive.ts","ng://@acaisoft/angular-azure-maps/src/azure-map/utils/azure-map-lazy-loader.ts","ng://@acaisoft/angular-azure-maps/src/azure-map/utils/load-map.service.ts","ng://@acaisoft/angular-azure-maps/src/azure-map/atlas-map/atlas-map.component.ts","ng://@acaisoft/angular-azure-maps/src/azure-map/am.module.ts"],"sourcesContent":["import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[amPopup]'\n})\nexport class AtlasPopupDirective {\n\n\n  constructor() { }\n\n}\n","interface Source {\n  type: AssetType;\n  src: string;\n}\n\nconst sources: Source[] = [\n    {\n        type: 'style',\n        src: 'https://atlas.microsoft.com/sdk/css/atlas.min.css?api-version=1'\n    },\n    {\n        type: 'script',\n        src: 'https://atlas.microsoft.com/sdk/js/atlas.min.js?api-version=1'\n    }\n];\n\nexport function _window(): any {\n    return window;\n}\n\nexport type AssetType = 'script' | 'style';\n\nexport function loadSingleAsset(source: string, type: AssetType) {\n    return new Promise((resolve, reject) => {\n        let createdElement;\n        switch (type) {\n            case 'script':\n                createdElement = document.createElement('script');\n                createdElement.src = source;\n                break;\n            case 'style':\n                createdElement = document.createElement('link');\n                createdElement.rel = 'stylesheet';\n                createdElement.href = source;\n                createdElement.type = 'text/css';\n                break;\n            default:\n                reject('Wrong Type');\n                break;\n        }\n        if (typeof (_window().atlas) !== 'undefined'\n            && typeof (_window().atlas.Map) !== 'undefined') {\n            resolve();\n        } else {\n          createdElement.onerror = reject;\n          createdElement.onload = resolve;\n          document.head.appendChild(createdElement);\n        }\n\n    });\n}\n\nexport function azureMapLazyLoader() {\n    return Promise.all(sources.map(source => loadSingleAsset(source.src, source.type)));\n}\n","import {Injectable} from '@angular/core';\nimport {azureMapLazyLoader} from './azure-map-lazy-loader';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {fromPromise} from 'rxjs/internal-compatibility';\nimport {b} from '@angular/core/src/render3';\n\n@Injectable()\nexport class LoadMapService {\n\n\n  public isLoaded = false;\n\n  public isComponentLoaded = false\n\n\n\n  loadedSubject = new Subject<boolean>();\n  loadedComponenet = new BehaviorSubject(false)\n\n  constructor() {\n  }\n\n\n  load(): Observable<boolean> {\n    if (!this.isLoaded) {\n      return fromPromise(azureMapLazyLoader().then(() => {\n        this.isLoaded = true;\n        return this.isLoaded;\n      }));\n    } else {\n      return of(true);\n    }\n  }\n\n  observableComponent() {\n    return this.loadedSubject.asObservable();\n  }\n}\n","/// <reference path=\"../../../atlas\"/>\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {AmFeature} from '../interfaces/am-feature';\nimport {AtlasPopupDirective} from '../directives/atlas-popup.directive';\nimport {LoadMapService} from '../utils/load-map.service';\n\n@Component({\n  selector: 'am-map',\n  template: `<div #mapWrapper class=\"atlas-map\"></div>\n\n<div id=\"popupWrapper\">\n  <div #popupsContainer>\n  </div>\n</div>\n\n\n\n\n`,\n  styles: [`.atlas-map{position:relative;width:100%;height:100%}`]\n})\nexport class AtlasMapComponent implements OnInit, AfterContentInit, AfterViewInit {\n  @Input() initialConfig: any;\n  @Input() _id: string;\n\n\n  @Output() onMapClick = new EventEmitter<atlas.data.Position>();\n  @Output() loaded: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('popupsContainer', {read: ViewContainerRef}) popupsContainer: ViewContainerRef;\n  @ViewChild('mapWrapper', {read: ElementRef}) mapWrapper: ElementRef;\n\n  /**\n   * For create and control popup\n   * To Inject into ng-template in parent\n   */\n  @ContentChild(AtlasPopupDirective, {read: TemplateRef}) popupTemplate: TemplateRef<any>;\n\n  public popupView: EmbeddedViewRef<any>;\n  public popupAtlas: atlas.Popup;\n\n  public map: atlas.Map;\n  private customPins: Array<any> = [];\n  public features: AmFeature[] = []; // Array of ours points to add on map\n  private pointsArray: atlas.data.Feature[] = [];\n  private cssArray: string[] = [];\n\n  constructor(private mapService: LoadMapService) {\n  }\n\n  ngOnInit(): void {\n    this.popupAtlas = new atlas.Popup();\n    this.mapService.loadedComponenet.next(true);\n\n  }\n\n  ngAfterContentInit(): void {\n    this.createMap(this._id, this.initialConfig); // Initial map\n    this.startMapClickListener(); // Start emitter\n  }\n\n  ngAfterViewInit(): void {\n    this.emitLoaded();\n  }\n\n  emitLoaded() {\n    if (this.map) {\n      this.loaded.emit();\n    } else {\n      setTimeout(this.emitLoaded, 100);\n    }\n  }\n\n  public createMap(id: string, config: any): void {\n    try {\n      this.mapWrapper.nativeElement.setAttribute('id', id);\n      this.map = new atlas.Map(id, config); // Init map box\n      console.log('Map was created!', this.map);\n    } catch (e) {\n      console.log('CHECK YOUR CONFIG!', e);\n    }\n  }\n\n  changeMapCamera(options: CameraOptions & AnimationOptions): void {\n    this.map.setCamera(options);\n  }\n\n  changeMapStyle(options: StyleOptions): void {\n    this.map.setStyle(options);\n  }\n\n  changeUserInteraction(options: UserInteractionOptions): void {\n    this.map.setUserInteraction(options);\n  }\n\n  /**\n   * Founding all unique layers from features Array\n   * @param AmFeature[] features\n   * @returns string[]\n   */\n  findUniqueLayers(features: AmFeature[]): string[] {\n    const allLayers = features.map(it => it.layer);\n    return Array.from(new Set(allLayers));\n  }\n\n  startMapClickListener(): void {\n    this.map.addEventListener('click', (e) => {\n      this.onMapClick.emit(e.position);\n      // On click you emit geo position\n    });\n  }\n\n  /**\n   * Creating popUpContainer and injected to parent Template\n   * @param context\n   */\n  createComponent(context: any): void {\n    if (this.popupView) {\n      this.popupView.destroy();\n    }\n    this.popupView = this.popupsContainer.createEmbeddedView(this.popupTemplate, context);\n  }\n\n  addItem(id, loc, clas): void {\n    let customHTML;\n    const idItem = clas + id;\n    const pos = new atlas.data.Position(loc.lnt, loc.lng);\n    this.cssArray.push(idItem);  // Saving existing HTML elements\n\n    customHTML = document.createElement('div');\n    customHTML.setAttribute('id', idItem);\n    customHTML.setAttribute('class', clas);\n\n    this.map.addHtml(customHTML, pos); // add to map\n  }\n\n  /**\n   * Drawin point on the map as pins\n   * @Incjet createPopups()\n   * @param  features\n   */\n  createPoints(features: AmFeature[]): void {\n    if (features.length === 0) {\n      console.log('No data available');\n      return;\n    }\n\n    for (const item of features) {\n      this.map.addPins([item.atlasFeature], item.pinConfig);\n      if (item.atlasFeature.properties.cssClass) {\n        this.addItem(item.dataElement.id, item.dataElement.localization, item.atlasFeature.properties.cssClass);\n        this.customPins.push(item.atlasFeature.properties.cssClass);\n      }\n      this.pointsArray.push(item.atlasFeature);\n    }\n    this.createPopups(features);\n  }\n\n\n  /**\n   * Created popUps for all features by type of layers\n   * Adding event on 'mouseover'\n   * @param features\n   */\n  createPopups(features: AmFeature[]): void {\n    for (const item of this.findUniqueLayers(features)) {\n      if (this.popupTemplate) {\n        this.map.addEventListener('mouseover', item, (e) => {\n          const amFeature: AmFeature = features.find(it => it.dataElement.name === e.features[0].properties.name);\n          this.createComponent({\n            /**\n             * sent to template variable\n             * raw data from input\n             */\n            dataElement: amFeature.dataElement\n          });\n          this.popupAtlas.setPopupOptions({\n            position: e.features[0].geometry.coordinates,\n            content: document.getElementById(`popupWrapper`),\n          });\n          this.popupAtlas.open(this.map);\n        });\n      }\n    }\n  }\n\n  updatePoints(features: AmFeature[]): void {\n    this.map.removeLayers(this.findUniqueLayers(features));\n    if (this.cssArray.length) {\n      this.cssArray.forEach(value => {\n        (document.querySelectorAll(`#${value}`) as any).forEach(it => it.remove());\n        this.map.removeHtml(value);\n      });\n      this.cssArray = [];\n    }\n    this.createPoints(features);\n  }\n\n  removeMap() {\n    this.map.remove();\n  }\n\n\n}\n\n\n\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AtlasMapComponent } from './atlas-map/atlas-map.component';\nimport { AtlasPopupDirective } from './directives/atlas-popup.directive';\nimport {LoadMapService} from './utils/load-map.service';\nimport {BrowserModule} from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  declarations: [AtlasMapComponent, AtlasPopupDirective],\n  exports: [\n    AtlasMapComponent,\n    AtlasPopupDirective,\n  ],\n  bootstrap: [AtlasMapComponent]\n})\nexport class AmModule {\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: AmModule,\n      providers: [\n        LoadMapService\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
