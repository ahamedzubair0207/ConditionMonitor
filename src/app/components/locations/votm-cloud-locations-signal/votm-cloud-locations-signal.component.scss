
@import "../../../../styles/_functions.scss", "../../../../styles/_variables.scss";


.has-search {
  .form-control {
    padding-left: calc(1.5 * #{$font-size-base} + 2 * #{$input-btn-padding-x});
  }
  .form-control-feedback {
    position: absolute;
    z-index: 2;
    display: block;
    text-align: center;
    pointer-events: none;
    color: $gray-500;
    padding: calc(#{$input-btn-padding-y} + 1px) $input-btn-padding-x;
    &:before {
      text-shadow: none;
    }
  }
}

.sensor-list {
  border: 1px solid $gray-400;
  padding-left: 0;
  max-height: 100%;
  overflow-y: auto;
  line-height: calc(2 * #{$font-size-base} + 4px);
  user-select: none;
  position: relative;
  font-weight: bold;
  > .sensor-item {
    white-space: nowrap;
    text-align: left;
    text-overflow: ellipsis;
    background-color: $gray-300;
    list-style-type: none;
    overflow: hidden;
    &:before {
      position: relative;
      width: 30px;
      margin: 0;
    }
  }
  > .derived {
    background-color: $gray-300;
    > span {
      white-space: nowrap;
      text-align: left;
      text-overflow: ellipsis;
      overflow: hidden;
      padding-right: calc(1.5 * #{$font-size-base} + 2 * #{$input-btn-padding-x});
      display: block;
      &:before {
        position: relative;
        width: 30px;
        margin: 0;
      }
    }
    > button {
      line-height: calc(2 * #{$font-size-base} + 2px);
      padding-top: 0;
      padding-bottom: 0;
      position: absolute;
      right: 0;
      top: 0;
    }
  }
}

.signal-item {
  position: relative;
  line-height: calc(2 * #{$font-size-base} + 2px);
  text-shadow: none;
  font-weight: normal;
  padding-left: calc(2 * #{$font-size-base} + 2px + #{$input-btn-padding-x});
  background-color: #fff;
  border: 1px solid $gray-300;
  text-align: left;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  display: block;
  width: 100%;
  border-radius: calc(#{$font-size-base} + 1px);
  border-top-right-radius: $border-radius;
  border-bottom-right-radius: $border-radius;
  padding-right: 0;
  user-select: none;
  cursor: move;
  &:before {
    position: absolute;
    left: -1px;
    top: -1px;
    width: calc(2 * #{$font-size-base} + 4px);
    line-height: calc(2 * #{$font-size-base} + 2px);
    background-color: $gray-300;
    border: 1px solid $gray-300;
    border-radius: calc(#{$font-size-base} + 1px);
    margin: 0;
  }
}

.signal-list {
  background-color: $gray-100;
  padding: calc(#{$spacer} * 0.5);
  border-bottom: 1px solid $gray-400;
  > .signal-item {
    &:not(:first-child) {
      margin-top: calc(#{$spacer} * 0.5);
    }
    &.assoc {
      border-color: $primary;
      cursor: default;
      &:before {
        border-color: $primary;
        background-color: $primary;
        color: #ffffff;
      }
    }
  }
}

.assoc-img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  outline: 1px dashed $gray-300;
  background-color: $white;
}

.assoc-pane {
  position: relative;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background-color: $gray-100;
  > .signal-item {
    border-top-right-radius: calc(#{$font-size-base} + 1px) !important;
    border-bottom-right-radius: calc(#{$font-size-base} + 1px) !important;
    display: inline-block !important;
    width: 0;
    padding-right: 0;
    padding-left: calc(2 * #{$font-size-base} + 2px);
    position: absolute;
    border-color: $primary;
    &.active {
      padding-right: calc(#{$font-size-base} / 2 + #{$input-btn-padding-x});
      padding-left: calc(2 * #{$font-size-base} + 2px + #{$input-btn-padding-x});
      width: auto;
      z-index: 1070;
    }
    &:hover {
      padding-right: calc(#{$font-size-base} / 2 + #{$input-btn-padding-x});
      padding-left: calc(2 * #{$font-size-base} + 2px + #{$input-btn-padding-x});
      width: auto;
      z-index: 1070;
    }

    &:before {
      color: $white;
      background-color: $primary;
      border-color: $primary;
    }
    &.unbound {
      border-style: dashed;
      &:before {
        color: $primary;
        background-color: $white;
        border-style: dashed;
      }
    }
    &.locked {
      cursor: default;
    }
    > i {
      cursor: pointer;
    }
  }
}

div.dndDragging {
  color: transparent;
  opacity: 0.75 !important;
  border-color: transparent !important;
  background-color: transparent !important;
  width: 0 !important;
  padding-right: 0 !important;
  padding-left: calc(2 * #{$font-size-base} + 2px) !important;
  &:before {
    content: "\f140";
    color: red !important;
    background-color: transparent !important;
    border-color: transparent !important;
  }
  > i {
    display: none;
  }
}

span.loc-origin,
span.loc-extent {
  position: absolute;
  background-color: rgba(255, 255, 255, 0.33);
  color: red;
  font-size: x-small;
}


.pad-l-1 {
  padding-left: 1.45rem !important;
}

.cursor-point {
  cursor: pointer!important;
}

.ui-overlaypanel-close {
    background-color:transparent!important;
    color: #333!important;
    top: 1.5em!important;
    right: 1.3em!important;
}

body .ui-overlaypanel {
  z-index: 9999!important;
}

.ng-select .ng-select-container {
  height: calc(1.5em + .5rem + 2px) !important;
  padding: .25rem .5rem;
  font-size: .765625rem;
  line-height: 1.5;
  border-radius: .2rem;
  min-height: 28px;
}


.edit-view-lock{
  float: right;
  font-size: 18px;
  color:  #02b3bf;
  margin-left: auto;
  // margin-top: 4px;

}
